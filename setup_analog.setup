Analog Design tools
1. Schematic Capture        -  XSchem  (similar tools, eSim, Xcircuit)
2. Netlist Simulation       -  Ngspice
3. DRC(VLSI Layout tool)    -  Magic, Klayout (also used for GDS Streaming)
4. LVS                      -  Netgen


The steps and process for setting up an Open source design Infrastructure for Analog and Digital design has been provided by spiliting it into 3 sections!
1. Installation of dependencies
2. Installation of the required Tools
3. Installation of Docker for running OpenLANE



---------------------------------------------------------------------- 1st step ----------------------------------------------------------------------------

--Installation of dependencies,

1. Libraries installation
--The libraries shown below for installation might seem too much for the analog tools however, this may help you to not look at library installation again
when installing new tools like gaw, text editor, xterm for ngspice and so on. So, it better to finish it in one shot than doing it again and again for 
newer installation.

cd
sudo apt-get update
sudo apt-get install m4 tcsh csh libx11-dev libx11-xcb-dev tcl-dev tcllib swig vim-gtk \
	tk-dev libcairo2-dev mesa-common-dev \
	libglu1-mesa-dev libncurses-dev \
	build-essential clang bison flex \
	libreadline-dev gawk libffi-dev git \
	graphviz xdot pkg-config python3 libboost-system-dev vim \
	adms autoconf automake libtool libxpm-dev libxaw7-dev libssl-dev libgtk-3-dev \
	libboost-python-dev libboost-filesystem-dev zlib1g-dev xterm graphicsmagick ghostscript --assume-yes


2. GAW installation

--GAW IS USED TO DISPLAY THE OUTPUT CURVES FROM XSCHEM SIMULATION 
--PLEASE INSTALL THE LATEST VERSION OF GAW BY LOOKING TO THE OFFICIAL WEBSITE http://download.tuxfamily.org/gaw/download
--i.e change the versions below in the commands into the latest one available.

cd
wget http://download.tuxfamily.org/gaw/download/gaw3-20220315.tar.gz
tar -xvzf gaw3-20220315.tar.gz
cd gaw3-20220315
./configure
make -j$(nproc)
sudo make install
cd
gaw
(--close gaw)
cd .gaw/
vim gawrc
--check for the line up_listenPort = 0 and change the 0 to 2020 (press i to start editing and press Esc, :wq to save and exit)
cd


-- If you want to know the reason why we open and close gaw, also the change of up_listenPort to 2020, give a read on the link mentioned below.
https://github.com/bluecmd/learn-sky130/blob/main/schematic/xschem/getting-started.md#installation-of-gaw

---------------------------------------------------------------------- 2nd step ----------------------------------------------------------------------------


--Installation of the required Tools, 

Note:  
       1. All the tools installation is done in the default diectory (/home/user), but if you wish to install all the tools in a specific folder then make sure
          you specify the locations specified in the commands accordingly.

       2. And if you want to find the path of the current directory use 'pwd'


1. Magic
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
git clone https://github.com/RTimothyEdwards/magic
cd magic/
./configure
make
sudo make install
cd


2. Klayout
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
sudo apt install klayout



3. Netgen
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
git clone https://github.com/RTimothyEdwards/netgen
cd netgen/
./configure
make 
sudo make install
cd


4.Xschem
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
git clone https://github.com/StefanSchippers/xschem.git
cd xschem/
./configure
make
sudo make install
cd


5.Ngspice
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
git clone git://git.code.sf.net/p/ngspice/ngspice
cd ngspice/
git checkout pre-master
./autogen.sh --adms
mkdir release
cd release 
../configure --with-x --enable-xspice --disable-debug --enable-cider --with-readline=yes --enable-openmp
make -j4
sudo make install
cd



---------------------------------------------------------------------- 3rd step ----------------------------------------------------------------------------



--Installation of OpenPDKs, SkywaterPDK.
(Starting in the default directory /home/user or user@user-VirtualBox:~$)


1. Installing skywater-pdk libraries. 
(There are many library submodules depending on the application and you can replace or add any submodule according to your
 use. But mainly uses ones are followed below: I/O library, primitive devices, high density and high voltage)

cd
mkdir pdks
cd pdks
git clone https://github.com/google/skywater-pdk
cd skywater-pdk
git submodule init libraries/sky130_fd_io/latest
git submodule init libraries/sky130_fd_pr/latest
git submodule init libraries/sky130_fd_sc_hd/latest
git submodule init libraries/sky130_fd_sc_hvl/latest
git submodule update
make -j$(nproc) timing
cd



2. Installing open_pdks, and setting up the PDK envinorment. 

cd
cd pdks
git clone https://github.com/RTimothyEdwards/open_pdks.git
./configure --enable-sky130-pdk=[path to sky130 PDK] --with-sky130-variants=All|A|B    
make
sudo make install
cd

--In my case, path to sky130 PDK = /home/prv/pdks/skywater-pdk and I choose sky130A variant as I dont need reram models which is included in B variant.
  So, the below command was the one I used in my case. 
  
./configure --enable-sky130-pdk=/home/prv/pdks/skywater-pdk/libraries --with-sky130-variants=A



-------------------------------------------------------- Final steps to run the tools with sky130 files-----------------------------------------------------------

1.Xschem

(Starting in the default directory /home/user or user@user-VirtualBox:~$)

-- Setting the PDK_ROOT varaible
gedit ~/.bashrc
export PDK_ROOT="/pdk/path/to/sky130"    -- add this to the .bashrc file (for example, my PDK_ROOT = "/home/prv/pdks/open_pdks/sky130")
source ~/.bashrc


-- Setting xschem for using ngspice

cd
cd .xschem/simulations/
vim .spiceinit
"press i"
set ngbehavior=hs
"press Esc then :wq"

(Press i and start editing, for closing the file press Esc then :wq)



2.Magic

-- Run magic using the command
magic -rcfile ~/pdks/open_pdks/sky130/sky130A/libs.tech/magic/sky130A.magicrc



3.Netgen
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
netgen
file1.spice file2.spice ~/pdks/open_pdks/sky130/sky130A/libs.tech/netgen/sky130_setup.tcl



------------------------------------------------------------------------------------------------------------------------------------------------------------

That's it youre done!




Acknowledgements: This file is formed using a collection of many installation resources, so, I want to mention their names and links where I took it from.

1. R. Timothy Edwards     - SVP Analog and Platform at Efabless, and maitains the open source tools website. (http://opencircuitdesign.com/index.html)
2. OpenLane official      - (https://openlane-docs.readthedocs.io/en/rtd-develop/#installation-notes)
3. Stefan Schippers       - Developer/Maintainer of Xschem.   (https://github.com/StefanSchippers)
4. Christian Svensson     - Software Reliability Engineer.    (https://github.com/bluecmd)
4. Kunal Ghosh            - Director and co-founder of VLSI System Design (VSD) Corp. Pvt. Ltd. 
                            (https://www.udemy.com/course/vsd-a-complete-guide-to-install-openlane-and-sky130nm-pdk/)
5. From official websites - CMAKE, Gaw, Ngspice (Links to the website are given below at the installation of the respective file)


Sorry if I have used your content and haven't specified your name above, please give me a pull request!
Also, if something is not documented well or some of the following steps are not working let me know your advices through a pull request.

