Open source EDA tools which are required in the OpenLANE flow,

Analog Design tools
1. OpenLane                 - Automated flow which converts Verilog(.v) to GDS file
2. Static Timing Analysis   -  OpenSTA, OpenTimer

Analog Design tools
1. Schematic Capture        -  XSchem  (similar tools, eSim, Xcircuit)
2. Netlist Simulation       -  Ngspice
3. DRC(VLSI Layout tool)    -  Magic, Klayout (also used for GDS Streaming)
4. LVS                      -  Netgen


The steps and process for setting up an Open source design Infrastructure for both Analog and Digital design has been provided by spiliting it into 4 sections!
1. Installation of dependencies
2. Installation of the required Tools
3. Installation of Docker for running OpenLANE
4. Running tools with sky130 setup


---------------------------------------------------------------------- 1st step ----------------------------------------------------------------------------

--Installation of dependencies,

1. Libraries installation

cd
sudo apt-get update
sudo apt-get install m4 tcsh csh libx11-dev libx11-xcb-dev tcl-dev tcllib swig vim-gtk \
	tk-dev libcairo2-dev mesa-common-dev \
	libglu1-mesa-dev libncurses-dev \
	build-essential clang bison flex \
	libreadline-dev gawk libffi-dev git \
	graphviz xdot pkg-config python3 libboost-system-dev vim \
	adms autoconf automake libtool libxpm-dev libxaw7-dev libssl-dev libgtk-3-dev \
	libboost-python-dev libboost-filesystem-dev zlib1g-dev xterm graphicsmagick ghostscript --assume-yes


2. CMAKE installation

-- CMAKE IS USED FOR INSTALLING TIMING ANALYSIS TOOLS ONLY, YOU CAN SKIP IF YOU DONT WISH TO INSTALL OPENTIMER/STA
--PLEASE INSTALL THE LATEST VERSION OF CMAKE BY LOOKING TO THE OFFICIAL WEBSITE https://cmake.org/download/ 
--i.e change the versions below in the commands into the latest one available.

cd
wget https://github.com/Kitware/CMake/releases/download/v3.23.0/cmake-3.23.0.tar.gz
tar -xvzf cmake-3.23.0.tar.gz
cd cmake-3.23.0/
sudo ./bootstrap 
make -j$(nproc)
sudo make install 
cd


3. GAW installation

--GAW IS USED TO DISPLAY THE OUTPUT CURVES FROM XSCHEM SIMULATION WITH A BETTER USER INTERFACE THAN NGSPICE PLOTS (YOU CAN SKIP IT AGAIN IF YOU DONT WISH TO)
--PLEASE INSTALL THE LATEST VERSION OF GAW BY LOOKING TO THE OFFICIAL WEBSITE http://download.tuxfamily.org/gaw/download
--i.e change the versions below in the commands into the latest one available.

cd
wget http://download.tuxfamily.org/gaw/download/gaw3-20220315.tar.gz
tar -xvzf gaw3-20220315.tar.gz
cd gaw3-20220315
./configure
make -j$(nproc)
sudo make install
cd
gaw
(--close gaw)
cd .gaw/
vim gawrc
--check for the line up_listenPort = 0 and change the 0 to 2020 (press i to start editing and press Esc, :wq to save and exit)
cd


-- If you want to know the reason why we open and close gaw, also the change of up_listenPort to 2020, give a read on the link mentioned below.
https://github.com/bluecmd/learn-sky130/blob/main/schematic/xschem/getting-started.md#installation-of-gaw

---------------------------------------------------------------------- 2nd step ----------------------------------------------------------------------------


--Installation of the required Tools, 

Note:  
       1. All the tools installation is done in the default diectory (/home/user), but if you wish to install all the tools in a specific folder then make sure
          you specify the locations specified in the commands accordingly.

       2. And if you want to find the path of the current directory use 'pwd'


1. Magic
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
git clone https://github.com/RTimothyEdwards/magic
cd magic/
./configure
make
sudo make install
cd


2. Klayout
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
sudo apt install klayout



3. Netgen
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
git clone https://github.com/RTimothyEdwards/netgen
cd netgen/
./configure
make 
sudo make install
cd


4.XSchem
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
git clone https://github.com/StefanSchippers/xschem.git
cd xschem/
./configure
make
sudo make install
cd


5.Ngspice
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
git clone git://git.code.sf.net/p/ngspice/ngspice
cd ngspice/
git checkout pre-master
./autogen.sh --adms
mkdir release
cd release 
../configure --with-x --enable-xspice --disable-debug --enable-cider --with-readline=yes --enable-openmp
make -j4
sudo make install
cd


6. OpenSTA and OpenTimer
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
git clone https://github.com/The-OpenROAD-Project/OpenSTA.git
cd OpenSTA/
mkdir build
cd build/
cmake ..
sudo make
cd ../
sudo ln -s $PWD/app/sta /usr/bin/sta
cd

sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
sudo apt-get update
sudo apt-get install gcc-8 g++-8 --assume-yes
cd /usr/bin
sudo rm -rf g++
sudo ln -s g++-8 /usr/bin/g++
sudo rm -rf gcc
sudo ln -s gcc-8 /usr/bin/gcc
cd

git clone https://github.com/OpenTimer/OpenTimer.git
cd OpenTimer/
mkdir build
cd build
cmake ../
sudo make
cd ../
sudo ln -s $PWD/bin/ot-shell /usr/bin/OpenTimer
cd


7. Maybe you need this too!
(Install Icarus iverilog)

cd
sudo apt-get install -y iverilog --assume-yes
sudo apt install gtkwave --assume-yes



--Installation of Docker for running OpenLANE
(Note: The following steps are given in the offical docker website)
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
sudo apt-get remove docker docker-engine docker.io containerd runc (use this command if you have older version of docker installed)
sudo apt-get update
sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo \
  "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io
sudo groupadd docker
sudo usermod -aG docker $USER
sudo systemctl enable docker
exit("reboot the system")


---------------------------------------------------------------------- 3rd step ----------------------------------------------------------------------------



--Installation of OpenPDKs, SkywaterPDKs, and docker setup for OpenLANE
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

git clone https://github.com/The-OpenROAD-Project/OpenLane.git
cd OpenLane/
make pull-openlane

	#Default PDK_ROOT is $(pwd)/pdks. If you want to install the PDK at a differnt location, uncomment the next line.
	#export PDK_ROOT=<absolute path to where skywater-pdk and open_pdks will reside>

make pdk  ("if you want full library, make full-pdk. Feel free to checkout the official OpenLane github for installation of specific library ")
cd pdks/skywater-pdk/
git submodule init libraries/sky130_fd_io/latest
git submodule init libraries/sky130_fd_pr/latest
git submodule init libraries/sky130_fd_sc_hd/latest
git submodule init libraries/sky130_fd_sc_hvl/latest
git submodule update
make -j$(nproc) timing
cd ..
cd ..
make test 

"So if this test run is successful your installation of OpenLane is successful! Feel free to look at the mag, GDS, and other files of this test run by going
to OpenLane/designs/spm/runs/openlane_test/results/"

And you may try this,
cd
klayout OpenLane/designs/spm/runs/openlane_test/results/magic/spm.gds




-------------------------------------------------------- Final steps to run the tools with sky130 files-----------------------------------------------------------

1.Xschem

(Starting in the default directory /home/user or user@user-VirtualBox:~$)

-- Setting the PDK_ROOT varaible
gedit ~/.bashrc
export PDK_ROOT="/pdk/path/to/sky130"   
source ~/.bashrc


-- Adding a compatiblity option hspice(hs) to make ngspice match devices accordingly with the geometrical dimensions in the models.

cd
cd .xschem/simulations/
vim .spiceinit
"press i"
set ngbehavior=hs
"press Esc then :wq"

(Press i and start editing, for closing the file press Esc then :wq)



2.Magic

-- Run magic using the command
magic -rcfile /path/to/sky130A.magicrc/file/in/sky130A/folder



3.Netgen
(Starting in the default directory /home/user or user@user-VirtualBox:~$)

cd
netgen
file1.spice file2.spice  /path/to/sky130_setup.tcl/file/in/sky130A/libs.tech/folder



------------------------------------------------------------------------------------------------------------------------------------------------------------

That's it youre done!




Acknowledgements: This file is formed using a collection of many installation resources, so, I want to mention their names and links where I took it from.

1. R. Timothy Edwards     - SVP Analog and Platform at Efabless, and maitains the open source tools website. (http://opencircuitdesign.com/index.html)
2. OpenLane official      - (https://openlane-docs.readthedocs.io/en/rtd-develop/#installation-notes)
3. Stefan Schippers       - Developer/Maintainer of Xschem.   (https://github.com/StefanSchippers)
4. Christian Svensson     - Software Reliability Engineer.    (https://github.com/bluecmd)
4. Kunal Ghosh            - Director and co-founder of VLSI System Design (VSD) Corp. Pvt. Ltd. 
                            (https://www.udemy.com/course/vsd-a-complete-guide-to-install-openlane-and-sky130nm-pdk/)
5. From official websites - CMAKE, Gaw, Ngspice (Links to the website are given below at the installation of the respective file)


Sorry if I have used your contents and haven't specified your name above, please give me a pull request!
Also, if something is not documented well or some of the following steps are not working let me know your advices through a pull request.


